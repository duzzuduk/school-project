-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.employees
(
    emp_id bigint,
    name character varying,
    manager bigint,
    position_id bigint,
    CONSTRAINT "employees$$$PK" PRIMARY KEY (emp_id)
);

CREATE TABLE IF NOT EXISTS public.positions
(
    id bigint,
    position_name character varying,
    CONSTRAINT "positions$$$PK" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.disciplines
(
    disc_id bigint,
    name character varying,
    CONSTRAINT "disciplines$$$PK" PRIMARY KEY (disc_id)
);

CREATE TABLE IF NOT EXISTS public.employees_disciplines
(
    emp_emp_id bigint,
    disc_disc_id bigint,
    CONSTRAINT emp_disc2134234234242243423 PRIMARY KEY (emp_emp_id, disc_disc_id)
);

CREATE TABLE IF NOT EXISTS public.section
(
    sect_id bigint,
    sect_name character varying[],
    "purpose of the lesson" character varying[],
    schedule character varying,
    disc_disc_id bigint,
    CONSTRAINT "section$$$PK" PRIMARY KEY (sect_id)
);

CREATE TABLE IF NOT EXISTS public.subject
(
    subj_id bigint,
    subj_name character varying,
    "for which classes" character varying[],
    "number of hours" character varying[],
    CONSTRAINT "subject$$$PK" PRIMARY KEY (subj_id)
);

CREATE TABLE IF NOT EXISTS public.holidays
(
    hd_id bigint,
    hdtp_hd_id bigint,
    date character varying[],
    budget character varying[],
    disc_disc_id bigint,
    CONSTRAINT "holidays$$$PK" PRIMARY KEY (hd_id)
);

CREATE TABLE IF NOT EXISTS public."Documentation"
(
    doc_id bigint,
    doc_name character varying,
    dctp_dcpt_id bigint,
    purpose character varying[],
    actual_from character varying[],
    path character varying[],
    emp_emp_id bigint,
    CONSTRAINT "Documentation$$$PK" PRIMARY KEY (doc_id)
);

CREATE TABLE IF NOT EXISTS public."Additional_classes  "
(
    "Additional_classes_id" bigint,
    "Additional_classes" character varying,
    learning_objectives character varying[],
    CONSTRAINT "Additional classes$$$PK" PRIMARY KEY ("Additional_classes_id")
);

CREATE TABLE IF NOT EXISTS public.document_types
(
    dctp_id bigint,
    doc_type character varying,
    comments character varying,
    CONSTRAINT "document_types$$$PK" PRIMARY KEY (dctp_id)
);

CREATE TABLE IF NOT EXISTS public.holidays_types
(
    hdtp_id bigint,
    hd_type character varying,
    comments character varying,
    CONSTRAINT "holidays_types$$$PK" PRIMARY KEY (hdtp_id)
);

CREATE TABLE IF NOT EXISTS public.competitions_and_awards
(
    caa_id bigint,
    caa_name character varying,
    date character varying,
    caatp_caa_id bigint,
    disc_disc_id bigint,
    CONSTRAINT "competitions_and_awards$$$PK" PRIMARY KEY (caatp_caa_id)
);

CREATE TABLE IF NOT EXISTS public.competitions_and_awards_types
(
    caatp_id bigint,
    CONSTRAINT "competitions and awards_types$$$PK" PRIMARY KEY (caatp_id)
);

ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT "employees$$$manager_FK" FOREIGN KEY (manager)
    REFERENCES public.employees (emp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees
    ADD CONSTRAINT "positions$$$position_FK" FOREIGN KEY (position_id)
    REFERENCES public.positions (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees_disciplines
    ADD CONSTRAINT "emp_disc$$$employees_FK" FOREIGN KEY (emp_emp_id)
    REFERENCES public.employees (emp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.employees_disciplines
    ADD CONSTRAINT "emp_disc$$$discipline_FK" FOREIGN KEY (disc_disc_id)
    REFERENCES public.disciplines (disc_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.section
    ADD CONSTRAINT "section$$$disciplines$$$PK" FOREIGN KEY (disc_disc_id)
    REFERENCES public.disciplines (disc_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.holidays
    ADD CONSTRAINT "holidays$$$holidays_types$$$PK" FOREIGN KEY (hdtp_hd_id)
    REFERENCES public.holidays_types (hdtp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.holidays
    ADD CONSTRAINT "holidays$$$disciplines$$$PK" FOREIGN KEY (disc_disc_id)
    REFERENCES public.disciplines (disc_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Documentation"
    ADD CONSTRAINT "Documentation$$$employees_FK" FOREIGN KEY (emp_emp_id)
    REFERENCES public.employees (emp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."Documentation"
    ADD CONSTRAINT "Documentation$$$document_types_FK" FOREIGN KEY (dctp_dcpt_id)
    REFERENCES public.document_types (dctp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.competitions_and_awards
    ADD CONSTRAINT "competitions_and_awards$$$competitions_and_awards_types$$$PK" FOREIGN KEY (caatp_caa_id)
    REFERENCES public.competitions_and_awards_types (caatp_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.competitions_and_awards
    ADD CONSTRAINT "competitions_and_awards$$$disciplines$$$PK" FOREIGN KEY (caa_id)
    REFERENCES public.disciplines (disc_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;